This file is a merged representation of the entire codebase, combining all repository files into a single document.
Generated by Repopack on: 2024-11-01T20:20:41.401Z

================================================================
File Summary
================================================================

Purpose:
--------
This file contains a packed representation of the entire repository's contents.
It is designed to be easily consumable by AI systems for analysis, code review,
or other automated processes.

File Format:
------------
The content is organized as follows:
1. This summary section
2. Repository information
3. Repository structure
4. Multiple file entries, each consisting of:
  a. A separator line (================)
  b. The file path (File: path/to/file)
  c. Another separator line
  d. The full contents of the file
  e. A blank line

Usage Guidelines:
-----------------
- This file should be treated as read-only. Any changes should be made to the
  original repository files, not this packed version.
- When processing this file, use the file path to distinguish
  between different files in the repository.
- Be aware that this file may contain sensitive information. Handle it with
  the same level of security as you would the original repository.

Notes:
------
- Some files may have been excluded based on .gitignore rules and Repopack's
  configuration.
- Binary files are not included in this packed representation. Please refer to
  the Repository Structure section for a complete list of file paths, including
  binary files.

Additional Info:
----------------

For more information about Repopack, visit: https://github.com/yamadashy/repopack

================================================================
Repository Structure
================================================================
block.json
edit.js
index.js
index.php
save.js
style.scss

================================================================
Repository Files
================================================================

================
File: block.json
================
{
    "apiVersion": 2,
    "title": "Hero Full",
    "name": "members1st/hero-full",
    "title": "Hero Full Section",
    "category": "design",
    "icon": "cover-image",
    "description": "A full-width hero section with background image and opacity controls",
    "keywords": ["hero", "header", "banner"],
    "supports": {
        "html": false,
        "align": ["full", "wide"]
    },
    "attributes": {
        "backgroundImage": {
            "type": "string",
            "default": ""
        },
        "overlayOpacity": {
            "type": "number",
            "default": 70
        },
        "darkModeOpacity": {
            "type": "number",
            "default": 80
        },
        "headingText": {
            "type": "string",
            "default": "75 Years"
        },
        "subheadingText": {
            "type": "string",
            "default": "in the Making"
        },
        "description": {
            "type": "string",
            "default": "We started the foundation with one goal; give back to the communities that have given us so much."
        },
        "buttonText": {
            "type": "string",
            "default": "Learn More"
        },
        "buttonUrl": {
            "type": "string",
            "default": "#"
        }
    },
    "textdomain": "members1st",
    "editorScript": "file:./index.js",
    "style": "file:./style.scss",
    "editorStyle": "file:./editor.scss"
}

================
File: edit.js
================
import { useBlockProps, InspectorControls, MediaUpload, RichText } from '@wordpress/block-editor';
import { PanelBody, RangeControl, TextControl } from '@wordpress/components';
import { __ } from '@wordpress/i18n';


// Import the custom button block if needed

export default function Edit({ attributes, setAttributes }) {
    const {
        backgroundImage,
        overlayOpacity,
        darkModeOpacity,
        headingText,
        subheadingText,
        description,
        buttonText,
        buttonUrl,
        buttonProps
    } = attributes;

    const blockProps = useBlockProps();

    return (
        <>
            <InspectorControls>
                <PanelBody title={__('Hero Settings', 'hero-block')}>
                    <MediaUpload
                        onSelect={(media) => setAttributes({ backgroundImage: media.url })}
                        type="image"
                        render={({ open }) => (
                            <button onClick={open}>
                                {__('Select Background Image', 'hero-block')}
                            </button>
                        )}
                    />
                    <RangeControl
                        label={__('Overlay Opacity', 'hero-block')}
                        value={overlayOpacity}
                        onChange={(value) => setAttributes({ overlayOpacity: value })}
                        min={0}
                        max={100}
                    />
                    <RangeControl
                        label={__('Dark Mode Overlay Opacity', 'hero-block')}
                        value={darkModeOpacity}
                        onChange={(value) => setAttributes({ darkModeOpacity: value })}
                        min={0}
                        max={100}
                    />
                    <TextControl
                        label={__('Button URL', 'hero-block')}
                        value={buttonUrl}
                        onChange={(value) => setAttributes({ buttonUrl: value })}
                    />
                </PanelBody>
            </InspectorControls>

                <div {...blockProps}>
                    <section id="hero">
                        <div 
                            className="relative h-screen w-full flex items-center justify-center text-center bg-cover bg-center"
                            style={{ 
                                backgroundImage: url(),
                                height: 'calc(100vh)'
                            }}
                        >
                            <div 
                                className={`absolute top-0 right-0 bottom-0 left-0 bg-black opacity-${overlayOpacity} dark:opacity-${darkModeOpacity}`}
                                ></div>
                        
                        <main className="px-4 sm:px-6 lg:px-10 z-10">
                            <div className="text-center">
                                <h2 className="mb-4 text-7xl font-bold tracking-tight leading-none uppercase">
                                    <RichText
                                        tagName="span"
                                        className="text-m1-red"
                                        value={headingText}
                                        onChange={(value) => setAttributes({ headingText: value })}
                                    />
                                    <RichText
                                        tagName="span"
                                        className="md:text-6xl text-5xl block tracking-wide text-white"
                                        value={subheadingText}
                                        onChange={(value) => setAttributes({ subheadingText: value })}
                                    />
                                </h2>
                                
                                <RichText
                                    tagName="p"
                                    className="mt-3 text-white sm:mt-5 sm:max-w-xl sm:mx-auto md:mt-5 font-opensans"
                                    value={description}
                                    onChange={(value) => setAttributes({ description: value })}
                                />
                                
                                <div className="mt-5 sm:mt-8 sm:flex justify-center">
                                    <div className="rounded-md shadow">
                                        <CustomButton
                                            text={buttonText}
                                            url={buttonUrl}
                                            {...buttonProps}
                                        />
                                    </div>
                                </div>
                            </div>
                            
                            <div className="scroll_icon_wrap">
                                <a 
                                    aria-label="Scroll down"
                                    className="scroll_link bloop text--white"
                                    href="#mission"
                                >
                                    <svg
                                        aria-hidden="true"
                                        className="animate-bounce fill-white"
                                        focusable="false"
                                        role="presentation"
                                        viewBox="0 0 30 17"
                                    >
                                        <path
                                            d="M0 3.235 3.525 0l11.473 10.509L26.473 0 30 3.235 14.998 17z"
                                            fillRule="evenodd"
                                        />
                                    </svg>
                                </a>
                            </div>
                        </main>
                    </div>
                </section>
            </div>
        </>
    );
}

================
File: index.js
================
/**
 * WordPress dependencies
 */
import { registerBlockType } from "@wordpress/blocks";

/**
 * Internal dependencies
 */
import "./style.scss";
import metadata from "./block.json";
import Edit from "./edit";
import Save from "./save";

registerBlockType(metadata.name, {
    ...metadata,
    edit: Edit,
    save: Save,
});
console.log('Block registered:', metadata.name);

================
File: index.php
================
<?php
/**
 * Plugin Name: Hero Full
 * Description: A customizable hero section block with background image, opacity controls, and custom heading styles.
 * Version: 1.0.0
 * Author: Your Name
 * Text Domain: hero-full
 */

if (!defined('ABSPATH')) {
    exit;
}

function hero_block_register() {
    register_block_type( __DIR__ . '/build' );
}
add_action( 'init', 'hero_block_register' );

// Register custom button block as a dependency
function hero_block_register_dependencies() {
    wp_register_script(
        'custom-button',
        plugins_url('members1st/build/blocks/custom-button/index.js'),
        array('wp-blocks', 'wp-element', 'wp-editor')
    ); 
}
add_action('init', 'hero_block_register_dependencies');

================
File: save.js
================
// File: src/blocks/hero-full/save.js
import { useBlockProps } from '@wordpress/block-editor';

export default function Save({ attributes }) {
    const {
        backgroundImage,
        overlayOpacity,
        darkModeOpacity,
        headingText,
        subheadingText,
        description,
        buttonText,
        buttonUrl
    } = attributes;

    const blockProps = useBlockProps.save();

    return (
        <div {...blockProps}>
            <section id="hero">
                <div 
                    className="relative h-screen w-full flex items-center justify-center text-center bg-cover bg-center"
                    style={{ 
                        backgroundImage: backgroundImage ? `url(${backgroundImage})` : undefined,
                        height: 'calc(100vh)'
                    }}
                >
                    <div 
                        className={`absolute top-0 right-0 bottom-0 left-0 bg-black opacity-${overlayOpacity} dark:opacity-${darkModeOpacity}`}
                    ></div>
                    
                    <main className="px-4 sm:px-6 lg:px-10 z-10">
                        <div className="text-center">
                            <h2 className="mb-4 text-7xl font-bold tracking-tight leading-none uppercase">
                                <span className="text-m1-red">{headingText}</span>
                                <span className="md:text-6xl text-5xl block tracking-wide text-white">
                                    {subheadingText}
                                </span>
                            </h2>
                            
                            <p className="mt-3 text-white sm:mt-5 sm:max-w-xl sm:mx-auto md:mt-5 font-opensans">
                                {description}
                            </p>
                        </div>
                    </main>
                </div>
            </section>
        </div>
    );
}

================
File: style.scss
================
.wp-block-hero-block-hero-section {
    .text-m1-red {
        color: #ff0000; /* Update with your actual brand red color */
    }
}
